stages:
- build
- docker
- deploy


build:
  stage: build
  image: maven:3.6-jdk-11-slim
  script: 
  - mvn clean package
  artifacts:
    when: on_success
    paths:
    - ./target/
  tags:
  - altemista_runner

dockerBuildAny:
  stage: docker
  image: docker:19
  script:
  - docker build -t nge/nge-example-server:$CI_COMMIT_SHA .
  dependencies:
  - build
  tags:
  - altemista_runner

dockerBuildMaster:
  stage: docker
  image: docker:19
  script:
  - docker build -t nge/nge-example-server:latest .
  dependencies:
  - build
  tags:
  - altemista_runner
#  only:
#  - master

dockerPushMaster:
  stage: docker
  image: docker:19
  script:
  - docker login $CI_REGISTRY_URL -u nrp -p $X_GITLAB_REGISTRY_TOKEN
  - docker build -t $CI_REGISTRY_URL/nge/nge-example-server:$CI_COMMIT_SHORT_SHA .
  - docker push $CI_REGISTRY_URL/nge/nge-example-server:$CI_COMMIT_SHORT_SHA
  dependencies:
  - build
  tags:
  - altemista_runner
#  only:
#  - master

kubernetesDeploy:
  stage: deploy
  image: ngerp/kubectl:latest
  before_script:
  - sed -i -e "s/###IMAGE###/registry.altemista.cloud\/nge\/nge-example-server\:$CI_COMMIT_SHORT_SHA/g" ./deployment.yaml
  - sed -i -e "s/###PULLSECRET###/$CI_PROJECT_NAME/g" ./deployment.yaml
  - cat ./deployment.yaml
  script:
  - if kubectl --insecure-skip-tls-verify=true --server "$K8S_API_URL" --token "$K8S_API_TOKEN" get ns $X_PROJECT_NAMESPACE; then echo "Namespace already exists"; else kubectl --insecure-skip-tls-verify=true --server "$K8S_API_URL" --token "$K8S_API_TOKEN" create ns $X_PROJECT_NAMESPACE ; fi 
  - if kubectl --insecure-skip-tls-verify=true --server "$K8S_API_URL" --token "$K8S_API_TOKEN" get secret $CI_PROJECT_NAME -n $X_PROJECT_NAMESPACE; then echo "Secret exists"; else kubectl --insecure-skip-tls-verify=true --server "$K8S_API_URL" --token "$K8S_API_TOKEN" create secret docker-registry $CI_PROJECT_NAME --docker-server=https://$CI_REGISTRY_URL/ --docker-username=nrp --docker-password=$X_GITLAB_REGISTRY_TOKEN_RO ; fi
  - kubectl --insecure-skip-tls-verify=true --server "$K8S_API_URL" --token "$K8S_API_TOKEN" apply -f deployment.yaml -n $X_PROJECT_NAMESPACE
  tags:
  - altemista_runner
#  only:
#  - master
